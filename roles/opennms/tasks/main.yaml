---
- name: debug
  debug: msg="OpenNMS @ {{ inventory_hostname }}"
  tags:
   - debug
- name: install openms yum repository rpm
  yum: name=https://yum.opennms.org/repofiles/{{ OpenNMSRepoFile }} state=present
  become: yes
  become_user: root
  tags:
   - setup
   - opennms
- name: install opennms gpg key
  rpm_key: state=present key=https://yum.opennms.org/OPENNMS-GPG-KEY
  become: yes
  become_user: root
  tags:
   - setup
   - opennms
- name: install opennms
  yum: pkg={{item}} state=latest
  with_items:
   - opennms-core
   - opennms-webapp-jetty
  become: yes
  become_user: root
  tags:
   - setup
   - opennms
- name: download hawtio
  get_url:
    url: https://oss.sonatype.org/content/repositories/public/io/hawt/hawtio-default/1.4.67/hawtio-default-1.4.67.war
    dest: /opt/opennms/etc/hawtio.war.zip
    mode: 0755
  become: yes
  become_user: root
  tags:
   - setup
   - opennms
- name: mkdir hawtio
  file: path=/opt/opennms/jetty-webapps/hawtio state=directory owner=root group=root mode=0755
  become: yes
  become_user: root
  tags:
   - setup
   - opennms
- name: extract hawtio
  unarchive: src=/opt/opennms/etc/hawtio.war.zip dest=/opt/opennms/jetty-webapps/hawtio creates=/opt/opennms/jetty-webapps/hawtio/index.html copy=no
  become: yes
  become_user: root
  tags:
   - setup
   - opennms
- name: delete hawtio slf4j api
  file: path=/opt/opennms/jetty-webapps/hawtio/WEB-INF/lib/slf4j-api-1.7.21.jar state=absent
  become: yes
  become_user: root
  tags:
   - setup
   - opennms
- name: delete hawtio slf4j log4j2 impl
  file: path=/opt/opennms/jetty-webapps/hawtio/WEB-INF/lib/slf4j-log4j12-1.7.21.jar state=absent
  become: yes
  become_user: root
  tags:
   - setup
   - opennms
- name: configure opennms (opennms.conf)
  template: src=opennms.conf dest=/opt/opennms/etc/opennms.conf owner=root group=root mode=0644
  become: yes
  become_user: root
  tags:
   - setup
   - opennms
- name: configure opennms (log4j2.xml)
  template: src=log4j2.xml dest=/opt/opennms/etc/log4j2.xml owner=root group=root mode=0644
  become: yes
  become_user: root
  tags:
   - setup
   - opennms
- name: configure opennms (opennms-datasources.xml)
  template: src=opennms-datasources.xml dest=/opt/opennms/etc/opennms-datasources.xml owner=root group=root mode=0644
  become: yes
  become_user: root
  tags:
   - setup
   - opennms
- name: configure opennms (service-configuration.xml)
  template: src=service-configuration.xml dest=/opt/opennms/etc/service-configuration.xml owner=root group=root mode=0644
  become: yes
  become_user: root
  tags:
   - setup
   - opennms
- name: configure opennms (opennms-activemq.xml)
  template: src=opennms-activemq.xml dest=/opt/opennms/etc/opennms-activemq.xml owner=root group=root mode=0644
  become: yes
  become_user: root
  tags:
   - setup
   - opennms
- name: configure opennms (syslogd-configuration.xml)
  template: src=syslogd-configuration.xml dest=/opt/opennms/etc/syslogd-configuration.xml owner=root group=root mode=0644
  become: yes
  become_user: root
  tags:
   - setup
   - opennms
- name: configure opennms (syslog/Cisco.syslog.xml)
  template: src=syslog/Cisco.syslog.xml dest=/opt/opennms/etc/syslog/Cisco.syslog.xml owner=root group=root mode=0644
  become: yes
  become_user: root
  tags:
   - setup
   - opennms
- name: configure opennms (eventconf.xml)
  template: src=eventconf.xml dest=/opt/opennms/etc/eventconf.xml owner=root group=root mode=0644
  become: yes
  become_user: root
  tags:
   - setup
   - opennms
- name: configure opennms (events/Cisco.syslog.events.xml)
  template: src=events/Cisco.syslog.events.xml dest=/opt/opennms/etc/events/Cisco.syslog.events.xml owner=root group=root mode=0644
  become: yes
  become_user: root
  tags:
   - setup
   - opennms
- name: configure opennms (opennms.properties.d/kafka.properties)
  template: src=opennms.properties.d/kafka.properties dest=/opt/opennms/etc/opennms.properties.d/kafka.properties owner=root group=root mode=0644
  become: yes
  become_user: root
  tags:
   - setup
   - opennms
- stat: path=/opt/opennms/etc/opennms-upgrade-status.properties
  become: yes
  become_user: root
  register: opennms_upgrade_status
  tags:
   - setup
   - opennms
- command: "/opt/opennms/bin/install -dis"
  become: yes
  become_user: root
  when: opennms_upgrade_status.stat.exists == False
  tags:
   - setup
   - opennms
- name: enable and start opennms
  service: name=opennms enabled=yes state=started
  become: yes
  become_user: root
  tags:
   - setup
   - opennms
